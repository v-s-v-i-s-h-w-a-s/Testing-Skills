name: Step 1, Setup Actions

on:
  workflow_dispatch:
  push:
    branches:
      - setup-actions

permissions:
  contents: write
  pull-requests: write
  issues: write

env:
  STEP_2_FILE: ".github/steps/02-first-workflow.md"

jobs:
  verify_branch:
    name: Verify Branch Creation
    runs-on: ubuntu-latest
    outputs:
      branch_exists: ${{ steps.verify-branch.outputs.branch_exists }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Verify branch creation
        id: verify-branch
        run: |
          if git branch -r | grep -q "origin/setup-actions"; then
            echo "Branch setup-actions exists"
            echo "branch_exists=true" >> $GITHUB_OUTPUT
          else
            echo "Branch setup-actions does not exist yet"
            echo "branch_exists=false" >> $GITHUB_OUTPUT
          fi

  check_workflow_file:
    name: Check for Workflow File
    needs: verify_branch
    if: ${{ needs.verify_branch.outputs.branch_exists == 'true' }}
    runs-on: ubuntu-latest
    outputs:
      workflow_exists: ${{ steps.check-workflow.outputs.workflow_exists }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: setup-actions

      - name: Check for hello-world workflow
        id: check-workflow
        run: |
          if [ -f .github/workflows/hello-world.yml ]; then
            echo "Hello World workflow exists"
            echo "workflow_exists=true" >> $GITHUB_OUTPUT
          else
            echo "Hello World workflow does not exist yet"
            echo "workflow_exists=false" >> $GITHUB_OUTPUT
          fi

  provide_feedback:
    name: Provide Feedback
    needs: [verify_branch, check_workflow_file]
    if: ${{ always() && needs.verify_branch.outputs.branch_exists == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Find open PRs
        id: find-pr
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prs = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              head: `${context.repo.owner}:setup-actions`,
              base: 'main'
            });

            if (prs.data.length > 0) {
              return { 
                exists: true, 
                number: prs.data[0].number,
                url: prs.data[0].html_url
              };
            }
            return { exists: false };

      - name: Get open issues
        id: get-issues
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              creator: context.repo.owner
            });

            if (issues.data.length > 0) {
              return { number: issues.data[0].number };
            }
            return { number: null };

      - name: Create comment
        if: ${{ needs.check_workflow_file.outputs.workflow_exists == 'true' && steps.get-issues.outputs.result != 'null' }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const issueNumber = JSON.parse('${{ steps.get-issues.outputs.result }}').number;

            if (issueNumber) {
              const responseData = JSON.parse(fs.readFileSync('response.json', 'utf8'));
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
                body: `## Great job! ðŸŽ‰\n\nYou've successfully created your first GitHub Actions workflow! Let's proceed with the next step.\n\n${responseData.responses.encouragement[0]}`
              });
              
              // Post next step content
              const stepContent = fs.readFileSync('${{ env.STEP_2_FILE }}', 'utf8');
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
                body: stepContent
              });
              
              // Enable next workflow
              const { execSync } = require('child_process');
              execSync('gh workflow enable "Step 2, CI Workflow"', { env: process.env });
            }
